/***

General Styles
==============

A place for atoms so small that they didn't feel to warrant their own files.

***/
/***

###### :focus

Applying styles for focus - `focusDisplayHandler` adds data attributes to target mouse, keyboard and touch focusing. Designers hate the focus ring when a user uses a mouse, but we need to keep the focus ring for keyboard users.

***/
input:focus,
textarea:focus,
select:focus,
:focus[data-focus-method="mouse"],
:focus[data-focus-method="touch"] {
  outline: none;
}

ul
li {
  list-style-type: none;
}

/***

###### img

Images that have the `data-src` or `data-srcset` are likely to be LQIP and so are blurred so they don't look rough. The idea being the image is indicative of what will be loaded. The lazy loader then swaps the `src` and `srcset` around and the image loads a better version, the blurring is removed.

***/
img {
  border: 0 none;
  transition: filter .15s linear;

  &[data-no-img-settings] {
    //outline: 3px solid rgba(yellow,.75);
    //outline-offset: -3px;
  }

  &[data-src]:not([src*='data:image/gif;base64']),
  &[data-srcset]:not([src*='data:image/gif;base64']) {
    filter: blur(10px);
  }
}

/***

###### .default-img

For if no image is specified - placeholder so to speak.

```
<span class="default-img"></span>
```

***/

.default-img {
  display: block;
  width: 100%;
  padding-bottom: 56.25%;
  background-color: $color__bg--primary;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='56' viewBox='0 0 80 56'%3E%3Cpath fill='%23ccc' d='M4 52l28-28 28 28H4z'/%3E%3Cpath fill='%23ccc' d='M44 52l16-16 16 16H44z'/%3E%3Ccircle cx='58' cy='18' r='6' fill='%23ccc'/%3E%3Cpath fill='%23ccc' d='M79 1v54H1V1h78m1-1H0v56h80V0z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: 50% 50%;
}

a {
  color: $color__link;
  text-decoration: none;

  &:hover,
  &:focus:hover {
    color: $color__link--hover;
  }

  &:active:hover {
    color: $color__link--active;
  }
}

/***

###### Special link overrides

Some browsers overrride styles if the link is a phone number - I'd rather control this..

***/

a[href^="tel:"],
a[href^="fax:"],
a[href^="tel:"]:hover,
a[href^="fax:"]:hover {
  color: inherit;
  text-decoration: none;
}

button {
  -webkit-appearance: none;
}


b, strong {
  font-weight: normal;
}

i, em {
  font-style: italic;
}

mark {
  color: $color__text--title;
  outline: 3px solid $color__black;
}

sub,
sup {
  font-size: 76.5%;
  vertical-align: sub;

  *[class*=f-] & {
    font-size: 60%;
  }

  .o-article .o-blocks>p:not([class*=f-]) & a,
  .o-article .o-blocks>p:not([class*=f-]) & a
  .o-article--editorial .o-blocks>p:not([class*=f-]) & a,
  .o-article--editorial .o-blocks>p:not([class*=f-]) & a {
    background: none;
  }
}

  sub {
    vertical-align: sub;
  }

  sup {
    vertical-align: super;
  }

pre,
code {
  display: inline-block;
  background: $color__black--5;
  font-family: Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console",
"Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono",
"Liberation Mono", "Nimbus Mono L", Monaco, "Courier New", Courier, monospace;
  font-size: 14px;
  line-height: 20px;
  vertical-align: middle;
  tab-width: 2;

  #demo & {
    background: transparent;
  }
}

pre {
  display: block;
  width: 80%;
  max-height: 400px;
  margin-top: 20px;
  padding: 4px 5px;
  overflow: auto;

  @include breakpoint('xlarge') {
    width: 100%;
  }

  #demo & {
    width: 100%;
    margin-top: 0;
    padding: 20px;
  }
}

code {
  padding: 2px 3px;
}

pre code {
  display: block;
  padding: 0;
}

.js-hide {
  display: none;
}

.js-show {
  display: block;
}

#demo {
  margin: 0;
  padding: 0;
}


/***

###### .icon--play-multi

Some play buttons want to resize the play icon per breakpoint.
Why not just scale the SVG you might ask? The different sizes are carefully placed on the pixel grid and scaling never gives you that control.

```
<svg class="icon--play-multi">
    <use xlink:href="#icon--play--48" />
    <use xlink:href="#icon--play--64" />
    <use xlink:href="#icon--play--96" />
</svg>
```

***/
.icon--play-multi {
  width: 48px;
  height: 48px;

  use {
    display: none;
  }

  use:nth-child(1) {
    display: block;
  }

  @include breakpoint('small+') {
    width: 64px;
    height: 64px;

    use:nth-child(1) {
      display: none;
    }

    use:nth-child(2) {
      display: block;
    }
  }

  @include breakpoint('medium+') {
    .m-media--m &,
    .m-media--l & {
      width: 96px;
      height: 96px;

      use:nth-child(2) {
        display: none;
      }

      use:nth-child(3) {
        display: block;
      }
    }
  }
}

[class*=icon--] {
  display: inline-block;
  vertical-align: middle;
}

[data-behavior="dragScroll"].s-scrollable {
  /* autoprefixer: off */
  cursor: move;
  cursor: ew-resize;
  cursor: -webkit-grab;
  cursor: -moz-grab;
  cursor: grab;
  -ms-overflow-style: none;
  overflow-y: -moz-scrollbars-none;
  -webkit-overflow-scrolling: touch;

  &::-webkit-scrollbar {
    -webkit-appearance: none;
    display: none;
  }
}

[data-behavior="dragScroll"].s-scrollable.s-mousedown {
  /* autoprefixer: off */
  cursor: move;
  cursor: -webkit-grabbing;
  cursor: -moz-grabbing;
  cursor: grabbing;
}

[data-behavior="dragScroll"].s-scrollable.s-dragging::before {
  content: '';
  position: fixed;
  z-index: map-get($zindexs, 'dragScrollLock');
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: #000;
  opacity: 0;
  /* autoprefixer: off */
  cursor: move;
  cursor: -webkit-grabbing;
  cursor: -moz-grabbing;
  cursor: grabbing;
}

.a17s_transition {
  transition: transform .5s $bezier--ease-in-out;
}

/***

###### .skip-nav

This animates in and out based on focus - the animation is intended to make the skip nav more obvious to a partially sighted user.

***/
.skip-nav {
  position: absolute;
  z-index: 999;
  left: 40px;
  top: -100px;
  padding: 10px;
  border-radius: $border-radius;
  background-color: #fff;
  box-shadow: $shadow;
  color: $color__link--accent;
  opacity: 0;
  transition: top .25s .5s;
}

.skip-nav::before,
.skip-nav::after {
  content: none;
}

.skip-nav:focus,
.skip-nav:active {
  top: 40px;
  opacity: 1;
  transition: top .25s;
}
