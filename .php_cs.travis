<?php

$finder = PhpCsFixer\Finder::create()
    ->exclude([
        '.git',
        'bootstrap/cache',
        'node_modules',
        'public',
        'resources/lang',
        'storage',
        'vendor',
    ])
    ->in(__DIR__);

$config = new PhpCsFixer\Config();
return $config->setRules([
    '@PSR1' => true,

    'align_multiline_comment' => [          // Each line of multi-line DocComments must have an asterisk [PSR-5] and must be aligned with the first one.
        'comment_type' => 'phpdocs_like',
    ],
    'array_indentation' => true,            // Each element of an array must be indented exactly once.
    'array_syntax' => true,                 // PHP arrays should be declared using the configured syntax.
    'backtick_to_shell_exec' => true,       // Converts backtick operators to shell_exec calls.
    'binary_operator_spaces' => true,       // Binary operators should be surrounded by space as configured.
    'blank_line_after_namespace' => true,   // There MUST be one blank line after the namespace declaration.
    'blank_line_after_opening_tag' => true, // Ensure there is no code on the same line as the PHP open tag and it is followed by a blank line.
    'blank_line_before_statement' => true,  // An empty line feed must precede any configured statement.
    'class_definition' => [                 // Whitespace around the keywords of a class, trait or interfaces definition should be one space.
        'multi_line_extends_each_single_line' => true,
        'single_item_single_line' => true,
    ],
    'compact_nullable_typehint' => true,    // Remove extra spaces in a nullable typehint.
    'concat_space' => [                     // Concatenation should be spaced according configuration.
        'spacing' => 'one',
    ],
    'declare_equal_normalize' => [          // Equal sign in declare statement should be surrounded by spaces or not following configuration.
        'space' => 'single',
    ],
    'elseif' => true,                       // The keyword elseif should be used instead of else if so that all control keywords look like single words.
    'encoding' => true,                     // PHP code MUST use only UTF-8 without BOM (remove BOM).
    'explicit_indirect_variable' => true,   // Add curly braces to indirect variables to make them clear to understand. Requires PHP >= 7.0.=
    'explicit_string_variable' => true,     // Converts implicit variables into explicit ones in double-quoted strings or heredoc syntax.
    'full_opening_tag' => true,             // PHP code must use the long <?php tags or short-echo <?= tags and not other tag variations.
    'fully_qualified_strict_types' => true, // Transforms imported FQCN parameters and return types in function arguments to short version.
    'function_declaration' => true,         // Spaces should be properly placed in a function declaration.
    'function_typehint_space' => true,      // Ensure single space between function's argument and its typehint.
    'include' => true,                      // Include/Require and file path should be divided with a single space. File path should not be placed under brackets.
    'increment_style' => true,              // Pre- or post-increment and decrement operators should be used if possible.
    'indentation_type' => true,             // Code MUST use configured indentation type.
    'line_ending' => true,                  // All PHP files must use same line ending.
    'linebreak_after_opening_tag' => true,  // Ensure there is no code on the same line as the PHP open tag.
    'list_syntax' => true,                  // List (array destructuring) assignment should be declared using the configured syntax. Requires PHP >= 7.1.
    'lowercase_cast' => true,               // Cast should be written in lower case.
    'lowercase_keywords' => true,           // PHP keywords MUST be in lower case.

])
->setFinder($finder);
